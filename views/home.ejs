<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="csrf-token" content="<%= csrfToken %>">
    <link rel="icon" type="image/x-icon" href="/img/icon.jpg">
    <title>Neer's Journal</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&family=Montserrat:wght@400;700&family=Dancing+Script:wght@700&display=swap" rel="stylesheet">
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <style>
        :root {
            --primary-blue: #007bff;
            --primary-blue-light: #66b2ff;
            --primary-blue-dark: #0056b3;
            --primary-white: #ffffff;
            --light-grey: #f0f4f8;
            --dark-grey: #343a40;
            --text-color: #495057;
            --border-color: #e2e6eb;
            --box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
            --transition-speed: 0.4s;
            --border-radius-lg: 15px;
            --border-radius-md: 10px;
            --accent-purple: #6f42c1;
            --accent-green: #28a745;
            --accent-orange: #fd7e14;
            --accent-pink: #e83e8c;
        }

        body.dark {
            --primary-blue: #0056b3;
            --primary-blue-light: #003d82;
            --primary-blue-dark: #00264d;
            --primary-white: #1a1a1a;
            --light-grey: #2c2c2c;
            --dark-grey: #f0f4f8;
            --text-color: #e0e0e0;
            --border-color: #444444;
            --box-shadow: 0 8px 30px rgba(0, 0, 0, 0.3);
        }

        *, *::before, *::after {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--light-grey);
            color: var(--text-color);
            line-height: 1.7;
            scroll-behavior: smooth;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 25px;
        }

        /* Header Styles */
        header {
            background: linear-gradient(135deg, var(--primary-blue), var(--primary-blue-dark));
            color: var(--primary-white);
            padding: 1rem 0;
            box-shadow: var(--box-shadow);
            position: sticky;
            top: 0;
            z-index: 1000;
        }

        header .container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
        }

        header h1 {
            font-family: 'Dancing Script', cursive;
            margin: 0;
            font-size: 2rem;
            font-weight: 700;
            text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);
            flex-grow: 1;
            text-align: left;
        }

        header nav {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        header nav ul {
            list-style: none;
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 15px;
            padding-left: 0;
            margin: 0;
        }

        header nav ul li a {
            color: var(--primary-white);
            text-decoration: none;
            font-weight: 500;
            font-size: 1.15rem;
            padding: 10px 20px;
            border-radius: var(--border-radius-md);
            transition: background-color var(--transition-speed) ease, transform 0.3s ease;
            position: relative;
            overflow: hidden;
            display: inline-block;
            border: none;
            cursor: pointer;
        }

        header nav ul li button {
            color: var(--primary-white);
            text-decoration: none;
            font-weight: 500;
            font-size: 1.15rem;
            padding: 10px 20px;
            border-radius: var(--border-radius-md);
            transition: background-color var(--transition-speed) ease, transform 0.3s ease;
            position: relative;
            overflow: hidden;
            display: inline-block;
            background: var(--accent-pink);
            border: none;
            cursor: pointer;
        }

        header nav ul li a:hover, header nav ul li button:hover {
            background-color: rgba(255, 255, 255, 0.2);
            transform: translateY(-3px);
        }

        .search-bar {
            display: flex;
            align-items: center;
            background: rgba(255, 255, 255, 0.15);
            border-radius: var(--border-radius-md);
            padding: 5px 10px;
            transition: background-color 0.3s ease, box-shadow 0.3s ease;
        }

        .search-bar:hover {
            background: rgba(255, 255, 255, 0.25);
        }

        .search-bar input {
            background: transparent;
            border: none;
            color: var(--primary-white);
            font-size: 1rem;
            padding: 8px;
            width: 150px;
            transition: width 0.3s ease;
        }

        .search-bar input:focus {
            outline: none;
            width: 200px;
            box-shadow: 0 0 5px rgba(255, 255, 255, 0.3);
        }

        .search-bar input::placeholder {
            color: rgba(255, 255, 255, 0.7);
        }

        .search-bar button {
            background: none;
            border: none;
            color: var(--primary-white);
            font-size: 1.2rem;
            cursor: pointer;
            padding: 5px;
            transition: color 0.3s ease;
        }

        .search-bar button:hover {
            color: var(--accent-orange);
        }

        .menu-toggle {
            display: none;
            font-size: 2rem;
            color: var(--primary-white);
            cursor: pointer;
            z-index: 1001;
        }

        /* Banner Slider */
        .banner-slider {
            width: 100%;
            height: 400px;
            position: relative;
            overflow: hidden;
        }

        .banner-slide {
            width: 100%;
            height: 100%;
            position: absolute;
            top: 0;
            left: 100%;
            transition: left 0.5s ease;
            background-size: cover;
            background-position: center;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--primary-white);
            text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);
        }

        .banner-slide.active {
            left: 0;
        }

        /* Journal Section */
        .journal-section {
            padding: 40px 0;
            text-align: center;
        }

        .btn-journal {
            background: linear-gradient(90deg, var(--primary-blue), var(--primary-blue-light));
            color: var(--primary-white);
            padding: 15px 30px;
            border: none;
            border-radius: var(--border-radius-md);
            font-size: 1.2rem;
            font-weight: 700;
            cursor: pointer;
            box-shadow: var(--box-shadow);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .btn-journal:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0, 123, 255, 0.4);
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            align-items: center;
            justify-content: center;
            overflow-y: auto;
        }

        .modal.active {
            display: flex;
        }

        .modal-content {
            background-color: var(--primary-white);
            border-radius: var(--border-radius-lg);
            padding: 20px;
            max-width: 600px;
            width: 90%;
            box-shadow: var(--box-shadow);
            position: relative;
            margin: 20px 0;
        }

        .close-btn {
            position: absolute;
            top: 15px;
            right: 15px;
            background: var(--accent-pink);
            color: var(--primary-white);
            border: none;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            font-size: 1.2rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background-color 0.3s ease;
        }

        .close-btn:hover {
            background: var(--accent-purple);
        }

        .input-group {
            margin-bottom: 15px;
        }

        .input-group label {
            display: block;
            font-weight: 500;
            margin-bottom: 5px;
            color: var(--dark-grey);
        }

        .input-group input,
        .input-group select,
        .input-group textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius-md);
            font-size: 1rem;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }

        .input-group input:focus,
        .input-group select:focus,
        .input-group textarea:focus {
            outline: none;
            border-color: var(--primary-blue);
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);
        }

        .input-group textarea {
            resize: vertical;
            min-height: 100px;
        }

        .password-container {
            position: relative;
            display: flex;
            align-items: center;
        }

        .toggle-password {
            position: absolute;
            right: 10px;
            cursor: pointer;
            color: var(--text-color);
            transition: color 0.3s ease;
        }

        .toggle-password:hover {
            color: var(--primary-blue);
        }

        .color-suggestions {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }

        .color-option {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            cursor: pointer;
            border: 2px solid var(--border-color);
            transition: transform 0.3s ease;
        }

        .color-option:hover {
            transform: scale(1.2);
        }

        .ql-container {
            min-height: 200px;
            max-height: 300px;
            overflow-y: auto;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius-md);
        }

        .ql-editor {
            font-size: 1rem;
            line-height: 1.5;
        }

        /* Slider for Boxes */
        .slider-container {
            position: relative;
            overflow: hidden;
            padding: 20px 40px;
        }

        .box-container {
            display: flex;
            gap: 20px;
            transition: transform 0.5s ease;
        }

        .box {
            flex: 0 0 300px;
            background-color: var(--primary-white);
            border-radius: var(--border-radius-md);
            padding: 20px;
            box-shadow: var(--box-shadow);
            transition: transform 0.3s ease;
        }

        .box:hover {
            transform: translateY(-5px);
        }

        .box img {
            width: 100%;
            height: 150px;
            object-fit: cover;
            border-radius: var(--border-radius-md);
            margin-bottom: 15px;
        }

        .slider-btn {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            background: var(--primary-blue);
            color: var(--primary-white);
            border: none;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            font-size: 1.5rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background-color 0.3s ease;
            z-index: 10;
        }

        .slider-btn:hover {
            background: var(--primary-blue-dark);
        }

        .slider-btn.left {
            left: 10px;
        }

        .slider-btn.right {
            right: 10px;
        }

        /* Friends Section */
        .friends-section {
            padding: 40px 0;
            text-align: center;
        }

        .friends-section h2 {
            text-align: center;
        }

        .friends-section .btn-journal {
            display: block;
            margin: 10px auto;
        }

        .friend-card {
            flex: 0 0 300px;
            background: var(--primary-white);
            border-radius: var(--border-radius-lg);
            padding: 20px;
            box-shadow: var(--box-shadow);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            position: relative;
            overflow: hidden;
            text-align: center;
        }

        .friend-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 123, 255, 0.2);
        }

        .friend-card img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: var(--border-radius-md);
            margin-bottom: 15px;
        }

        .friend-card h3 {
            font-size: 1.5rem;
            margin-bottom: 10px;
            color: var(--dark-grey);
        }

        .friend-card p {
            font-size: 1rem;
            color: var(--text-color);
            margin-bottom: 10px;
        }

        .friend-card .thoughts {
            font-style: italic;
            color: var(--accent-purple);
        }

        .friend-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background: linear-gradient(90deg, var(--accent-green), var(--accent-orange));
            border-radius: var(--border-radius-lg) var(--border-radius-lg) 0 0;
        }

        /* Idols Section */
        .idols-section {
            padding: 40px 0;
            text-align: center;
            background: linear-gradient(180deg, var(--light-grey), #f8f9fa);
        }

        .idols-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .idol-card {
            background: var(--primary-white);
            border-radius: var(--border-radius-lg);
            padding: 20px;
            box-shadow: var(--box-shadow);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            position: relative;
            overflow: hidden;
            text-align: center;
        }

        .idol-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 123, 255, 0.2);
        }

        .idol-card img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: var(--border-radius-md);
            margin-bottom: 15px;
        }

        .idol-card h3 {
            font-size: 1.5rem;
            margin-bottom: 10px;
            color: var(--dark-grey);
        }

        .idol-card .quote {
            font-size: 1rem;
            color: var(--text-color);
            font-style: italic;
            margin-bottom: 10px;
        }

        .idol-card .description {
            font-size: 0.95rem;
            color: var(--text-color);
        }

        .idol-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background: linear-gradient(90deg, var(--accent-purple), var(--accent-green));
            border-radius: var(--border-radius-lg) var(--border-radius-lg) 0 0;
        }

        /* Life Saved Section */
        .life-saved-section {
            padding: 40px 0;
            text-align: center;
            background: linear-gradient(180deg, #fff, var(--light-grey));
        }

        .life-saved-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .life-saved-tile {
            background: var(--primary-white);
            border-radius: var(--border-radius-lg);
            padding: 20px;
            box-shadow: var(--box-shadow);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            position: relative;
            overflow: hidden;
            text-align: center;
        }

        .life-saved-tile:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 123, 255, 0.2);
        }

        .life-saved-tile img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: var(--border-radius-md);
            margin-bottom: 15px;
        }

        .life-saved-tile h3 {
            font-size: 1.5rem;
            margin-bottom: 10px;
            color: var(--dark-grey);
        }

        .life-saved-tile p {
            font-size: 1rem;
            color: var(--text-color);
            margin-bottom: 10px;
        }

        .life-saved-tile .date {
            font-size: 0.9rem;
            color: var(--accent-purple);
            font-weight: 500;
        }

        .life-saved-tile::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background: linear-gradient(90deg, var(--accent-orange), var(--accent-pink));
            border-radius: var(--border-radius-lg) var(--border-radius-lg) 0 0;
        }

        .comment-section {
            margin-top: 15px;
            border-top: 1px solid var(--border-color);
            padding-top: 10px;
        }

        .comment-section h4 {
            font-size: 1.1rem;
            margin-bottom: 10px;
            color: var(--dark-grey);
        }

        .comment-section textarea {
            width: 100%;
            padding: 10px;
            border-radius: var(--border-radius-md);
            border: 1px solid var(--border-color);
            margin-bottom: 10px;
            resize: vertical;
        }

        /* About Me */
        .about-me {
            padding: 40px 0;
            text-align: center;
        }

        .about-me p {
            max-width: 800px;
            margin: 0 auto;
            font-size: 1.2rem;
        }

        /* Error Message */
        .error-message {
            color: red;
            text-align: center;
            margin-bottom: 20px;
        }

        /* Footer */
        footer {
            background: linear-gradient(180deg, var(--primary-blue-dark), var(--primary-blue));
            color: var(--primary-white);
            padding: 40px 0;
            text-align: center;
        }

        footer .container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
        }

        footer p {
            margin: 0;
            font-size: 1.1rem;
            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);
        }

        .social-links {
            display: flex;
            gap: 15px;
        }

        .social-links a {
            color: var(--primary-white);
            font-size: 1.5rem;
            transition: transform 0.3s ease, color 0.3s ease;
        }

        .social-links a:hover {
            transform: scale(1.2);
            color: var(--accent-orange);
        }

        /* Ensure card text defaults to readable color and force Quill inner nodes to inherit the wrapper color */
        .box, .friend-card {
            color: var(--text-color);
        }
        .box .ql-editor, .friend-card .ql-editor {
            color: inherit;
        }
        .box .ql-editor * {
            color: inherit !important;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            header .container {
                flex-wrap: nowrap;
                justify-content: space-between;
            }

            header h1 {
                font-size: 1.8rem;
            }

            .menu-toggle {
                display: block;
            }

            header nav {
                position: fixed;
                top: 0;
                right: -100%;
                width: 70%;
                height: 100%;
                background: linear-gradient(180deg, var(--primary-blue-dark), var(--primary-blue));
                padding-top: 80px;
                box-shadow: -5px 0 15px rgba(0, 0, 0, 0.3);
                transition: right 0.4s ease-in-out;
                display: flex;
                flex-direction: column;
                align-items: center;
            }

            header nav.active {
                right: 0;
            }

            header nav ul {
                flex-direction: column;
                gap: 20px;
                width: 100%;
            }

            .search-bar {
                margin-top: 20px;
                width: 100%;
                justify-content: center;
            }

            .search-bar input {
                width: 100%;
            }

            .search-bar input:focus {
                width: 100%;
            }

            .box-container, .idols-grid, .life-saved-grid {
                flex-direction: row;
                overflow-x: visible;
            }

            .box, .friend-card, .idol-card, .life-saved-tile {
                flex: 0 0 80%;
                width: 80%;
            }

            .slider-btn {
                width: 35px;
                height: 35px;
                font-size: 1.2rem;
            }

            .friends-section .btn-journal {
                width: 80%;
            }
        }

        @media (max-width: 480px) {
            header h1 {
                font-size: 1.5rem;
            }

            .modal-content {
                width: 95%;
                padding: 15px;
            }

            .input-group input,
            .input-group select,
            .input-group textarea {
                font-size: 0.9rem;
                padding: 8px;
            }

            .btn-journal {
                padding: 10px 20px;
                font-size: 1rem;
            }

            .ql-container {
                max-height: 250px;
            }

            .box, .friend-card, .idol-card, .life-saved-tile {
                flex: 0 0 90%;
                width: 90%;
                padding: 15px;
            }

            .slider-btn {
                width: 30px;
                height: 30px;
                font-size: 1rem;
            }

            .friends-section .btn-journal {
                width: 90%;
            }

            footer {
                padding: 20px 0;
            }

            .social-links a {
                font-size: 1.3rem;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <h1>Neer's Journey</h1>
            <div class="menu-toggle" id="menuToggle">
                <i class="fas fa-bars"></i>
            </div>
            <nav id="mainNav">
                <ul>
                    <li><a href="#idols">Idols</a></li>
                    <li><a href="#friends">Friends</a></li>
                    <li><a href="#life-saved">Life Saved</a></li>
                    <li><a href="#photos">Photos</a></li>
                    <li><button id="themeToggle" class="theme-toggle-btn"><i class="fas fa-moon"></i></button></li>
                    <li><button onclick="window.location.href='/logout'">Logout</button></li>
                </ul>
                <form action="/search" method="GET" class="search-bar">
                    <input type="text" name="query" placeholder="Search..." required>
                    <button type="submit"><i class="fas fa-search"></i></button>
                </form>
            </nav>
        </div>
    </header>

    <div class="overlay" id="menuOverlay"></div>

    <main>
        <!-- Error Message -->
        <% if (error) { %>
            <div class="container">
                <p class="error-message"><%= error %></p>
            </div>
        <% } %>

        <!-- Banner Slider -->
        <section class="banner-slider">
            <div class="banner-slide active" style="background-image: url('./img/banner.jpeg');">
                <h2>Welcome to My Journey</h2>
            </div>
            <div class="banner-slide" style="background-image: url('./img/banner1.png');">
                <h2>Explore My Projects</h2>
            </div>
            <div class="banner-slide" style="background-image: url('./img/connect.jpg');">
                <h2>Connect with Me</h2>
            </div>
        </section>

        <!-- Journal Section -->
        <section id="journal" class="journal-section section-box">
            <div class="container">
                <h2><i class="fas fa-book section-icon"></i> My Journal</h2>
                <button class="btn-journal" id="openAdminLoginBtn">Start Journaling</button>
                <div class="slider-container" id="journalSlider">
                    <button class="slider-btn left" onclick="slide('journalSlider', -1)">&lt;</button>
                    <div class="box-container">
                        <% entries.forEach(entry => { %>
                            <div class="box" style="background-color: <%= entry.boxColor || '#ffffff' %>;">
                                <h3 style="color: <%= entry.headingColor || '#333333' %>;"><%= entry.title %></h3>
                                <p class="date">Date: <%= entry.createdAt ? new Date(entry.createdAt).toDateString() : 'Not specified' %></p>
                                <div class="ql-editor" style="color: <%= entry.contentColor || '#333333' %>;"><%- entry.content %></div>
                            </div>
                        <% }) %>
                    </div>
                    <button class="slider-btn right" onclick="slide('journalSlider', 1)">&gt;</button>
                </div>
            </div>
        </section>

        <!-- Idols Section -->
        <section id="idols" class="idols-section section-box">
            <div class="container">
                <h2><i class="fas fa-star section-icon"></i> My Idols</h2>
                <div class="idols-grid">
                    <div class="idol-card">
                        <img src="https://e1.pxfuel.com/desktop-wallpaper/527/759/desktop-wallpaper-osho-osho-rajneesh-indian-thinker-indian-thinker-osho-rajneesh-osho.jpg" alt="Osho">
                        <h3>Osho</h3>
                        <p class="quote">"Don't be afraid of difficulties. The greater the difficulties, the more energy you will have to transform them into nourishment"</p>
                        <p class="description">Whenever I feel depressed, I listen to him and feel calm and relaxed. He speaks the truth about life.</p>
                    </div>
                    <div class="idol-card">
                        <img src="https://www.tatatrusts.org/images/Ratan_N_Tata_sm.jpg" alt="Ratan Tata">
                        <h3>Ratan Tata</h3>
                        <p class="quote">"None can destroy iron, but its own rust can. Likewise, none can destroy a person, but his own mindset can."</p>
                        <p class="description">I am influenced by him because he is so kind and humble.</p>
                    </div>
                    <div class="idol-card">
                        <img src="https://imageio.forbes.com/specials-images/imageserve/63a10cda05f6db21230c44d1/Bill-Gates/1960x0.jpg?format=jpg&width=1440" alt="Bill Gates">
                        <h3>Bill Gates</h3>
                        <p class="quote">"Your most unhappy customers are your greatest source of learning."</p>
                        <p class="description">I like Bill Gates because he likes to serve the people on Earth who need it.</p>
                    </div>
                    <div class="idol-card">
                        <img src="https://www.telegraph.co.uk/multimedia/archive/02223/zckerberg_2223405b.jpg?imwidth=960" alt="Mr Zuckerberg">
                        <h3>Mr Zuckerberg</h3>
                        <p class="quote">"The biggest risk is not taking any risk. In a world that's changing really quickly, the only strategy that is guaranteed to fail is not taking risks."</p>
                        <p class="description">I like him because he has a big company but still seems to learn new things every time.</p>
                    </div>
                </div>
            </div>
        </section>

        <!-- Friends Section -->
        <section id="friends" class="friends-section section-box">
            <div class="container">
                <h2><i class="fas fa-users section-icon"></i> Neer's Friends</h2>
                <button class="btn-journal" id="openFriendFormBtn">Add Friend</button>
                <div class="slider-container" id="friendsSlider">
                    <button class="slider-btn left" onclick="slide('friendsSlider', -1)">&lt;</button>
                    <div class="box-container">
                        <% friends.forEach(friend => { %>
                            <div class="friend-card">
                                <img src="<%= friend.profilePicture || 'https://via.placeholder.com/300x200?text=No+Image' %>" alt="<%= friend.name %>">
                                <h3><%= friend.name %></h3>
                                <p><strong>Job Category:</strong> <%= friend.jobCategory %></p>
                                <p><strong>Country:</strong> <%= friend.country %></p>
                                <p><strong>Personality:</strong> <%= friend.personality %></p>
                                <p><strong>Joined:</strong> <%= friend.joinDate ? new Date(friend.joinDate).toDateString() : 'Not specified' %></p>
                                <p class="thoughts">"<%= friend.thoughts %>"</p>
                            </div>
                        <% }) %>
                    </div>
                    <button class="slider-btn right" onclick="slide('friendsSlider', 1)">&gt;</button>
                </div>
            </div>
        </section>

        <!-- Life Saved Section -->
        <section id="life-saved" class="life-saved-section section-box">
            <div class="container">
                <h2><i class="fas fa-heart section-icon"></i> Lives I've Saved</h2>
                <div class="life-saved-grid">
                    <% lifeSaved.forEach(story => { %>
                        <div class="life-saved-tile">
                            <img src="<%= story.photo %>" alt="<%= story.title %>">
                            <h3><%= story.title %></h3>
                            <p><%= story.description %></p>
                            <p class="date">Date: <%= story.date ? new Date(story.date).toDateString() : 'Not specified' %></p>
                            <div class="comment-section">
                                <h4>Comments</h4>
                                <% story.comments.forEach(comment => { %>
                                    <p><strong><%= comment.user %></strong>: <%= comment.content %></p>
                                <% }) %>
                                <form action="/comment/<%= story._id %>" method="POST">
                                    <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                                    <textarea name="content" placeholder="Add a comment..." required></textarea>
                                    <button type="submit" class="btn-journal">Post Comment</button>
                                </form>
                            </div>
                        </div>
                    <% }) %>
                </div>
            </div>
        </section>

        <!-- About Me -->
        <section id="about" class="about-me section-box">
            <div class="container">
                <h2><i class="fas fa-user section-icon"></i> About Me</h2>
                <p>Hi, I'm Neeraj, a passionate learner and creator. I'm dedicated to building innovative projects, connecting with inspiring people, and making a positive impact by helping those in need. My journey is fueled by curiosity and a desire to grow, whether through coding, learning new languages, or saving lives.</p>
            </div>
        </section>

        <!-- Photos Section -->
        <section id="photos" class="section-box">
            <div class="container">
                <h2><i class="fas fa-camera section-icon"></i> My Photos</h2>
                <div class="box-container">
                    <div class="box">
                        <img class="photo-thumb" src="./img/neer1.jpg" alt="Photo 1" data-full="./img/neer1.jpg" style="cursor:pointer;" onclick="openPhotoModal(this.dataset.full || this.src)">
                        <p>"Capturing the beauty of life."</p>
                    </div>
                    <div class="box">
                        <img class="photo-thumb" src="./img/neer2.jpg" alt="Photo 2" data-full="./img/neer2.jpg" style="cursor:pointer;" onclick="openPhotoModal(this.dataset.full || this.src)">
                        <p>"Moments that inspire me."</p>
                    </div>
                    <div class="box">
                        <img class="photo-thumb" src="./img/icon.jpg" alt="Icon" data-full="./img/icon.jpg" style="cursor:pointer;" onclick="openPhotoModal(this.dataset.full || this.src)">
                        <p>"My Icon."</p>
                    </div>
                </div>
            </div>

            <!-- Photo viewer modal (reuses .modal/.modal-content styles from page) -->
            <div id="photoModal" class="modal" aria-hidden="true" onclick="if(event.target === this) closePhotoModal()">
                <div class="modal-content" style="background: transparent; box-shadow: none; max-width: 900px; width: 95%; padding: 10px; display:flex; align-items:center; justify-content:center;">
                    <button class="close-btn" aria-label="Close" onclick="closePhotoModal()" style="position:absolute; right:12px; top:12px; z-index:12;">&times;</button>
                    <img id="photoModalImg" src="" alt="Full photo" style="max-height:80vh; width:auto; max-width:100%; border-radius:12px; display:block;">
                </div>
            </div>

            <script>
                // Expose simple global functions so clicks on thumbnails work inline
                function openPhotoModal(src) {
                    try {
                        const modal = document.getElementById('photoModal');
                        const img = document.getElementById('photoModalImg');
                        if (!modal || !img) return;
                        img.src = src;
                        modal.classList.add('active');
                        modal.setAttribute('aria-hidden', 'false');
                        // Prevent page scroll while open
                        document.body.style.overflow = 'hidden';
                    } catch (e) {
                        console.error('openPhotoModal error', e);
                    }
                }

                function closePhotoModal() {
                    try {
                        const modal = document.getElementById('photoModal');
                        const img = document.getElementById('photoModalImg');
                        if (!modal || !img) return;
                        modal.classList.remove('active');
                        modal.setAttribute('aria-hidden', 'true');
                        img.src = '';
                        document.body.style.overflow = '';
                    } catch (e) {
                        console.error('closePhotoModal error', e);
                    }
                }

                // keyboard support: Esc closes viewer
                document.addEventListener('keydown', function (e) {
                    if (e.key === 'Escape') {
                        const modal = document.getElementById('photoModal');
                        if (modal && modal.classList.contains('active')) closePhotoModal();
                    }
                });
            </script>
        </section>
    </main>

    <!-- Journal Editor Modal -->
    <div class="modal" id="editorModal">
        <div class="modal-content">
            <button class="close-btn" id="closeEditorBtn">&times;</button>
            <h2>Create Journal Entry</h2>
            <form id="journalForm">
                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                <div class="input-group">
                    <label for="title">Title</label>
                    <input type="text" id="title" name="title" required>
                </div>
                <div class="input-group">
                    <label for="editor">Content</label>
                    <div id="editor"></div>
                    <input type="hidden" id="content" name="content">
                </div>
                <div class="input-group">
                    <label for="headingColor">Heading Color</label>
                    <input type="color" id="headingColor" name="headingColor" value="#000000">
                </div>
                <div class="input-group">
                    <label for="contentColor">Content Color</label>
                    <input type="color" id="contentColor" name="contentColor" value="#000000">
                </div>
                <div class="input-group">
                    <label for="boxColor">Box Background Color</label>
                    <input type="color" id="boxColor" name="boxColor" value="#ffffff">
                    <div class="color-suggestions">
                        <div class="color-option" style="background-color: #e6f3ff" onclick="setColor('#e6f3ff')"></div>
                        <div class="color-option" style="background-color: #fff1e6" onclick="setColor('#fff1e6')"></div>
                        <div class="color-option" style="background-color: #e6ffe6" onclick="setColor('#e6ffe6')"></div>
                        <div class="color-option" style="background-color: #ffe6f3" onclick="setColor('#ffe6f3')"></div>
                    </div>
                </div>
                <button type="submit" class="btn-journal">Save Entry</button>
            </form>
        </div>
    </div>

    <!-- Friend Form Modal -->
    <div class="modal" id="friendModal">
        <div class="modal-content">
            <button class="close-btn" id="closeFriendFormBtn">&times;</button>
            <h2>Add Neer's Friend</h2>
            <form id="friendForm">
                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                <div class="input-group">
                    <label for="name">Name</label>
                    <input type="text" id="name" name="name" required>
                </div>
                <div class="input-group">
                    <label for="jobCategory">Job Category</label>
                    <select id="jobCategory" name="jobCategory" required>
                        <option value="">Select Job Category</option>
                        <option value="Engineer">Engineer</option>
                        <option value="Designer">Designer</option>
                        <option value="Teacher">Teacher</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div class="input-group">
                    <label for="country">Country</label>
                    <select id="country" name="country" required>
                        <option value="">Select Country</option>
                        <option value="India">India</option>
                        <option value="USA">USA</option>
                        <option value="Russia">Russia</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div class="input-group">
                    <label for="profilePicture">Profile Picture</label>
                    <input type="text" id="profilePicture" name="profilePicture" placeholder="Enter image URL">
                </div>
                <div class="input-group">
                    <label for="gender">Gender</label>
                    <select id="gender" name="gender" required>
                        <option value="">Select Gender</option>
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div class="input-group">
                    <label for="personality">Personality</label>
                    <select id="personality" name="personality" required>
                        <option value="">Select Personality</option>
                        <option value="Creative">Creative</option>
                        <option value="Analytical">Analytical</option>
                        <option value="Friendly">Friendly</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div class="input-group">
                    <label for="joinDate">Date Joined</label>
                    <input type="date" id="joinDate" name="joinDate" required>
                </div>
                <div class="input-group">
                    <label for="thoughts">What do you think about Neeraj?</label>
                    <textarea id="thoughts" name="thoughts" required></textarea>
                </div>
                <button type="submit" class="btn-journal">Submit</button>
            </form>
        </div>
    </div>

    <!-- Admin Login Modal -->
    <div class="modal" id="adminLoginModal">
        <div class="modal-content">
            <button class="close-btn" id="closeAdminLoginBtn">&times;</button>
            <h2>Admin Login</h2>
            <form id="adminLoginForm">
                <div class="input-group">
                    <label for="adminUsername">Username</label>
                    <input type="text" id="adminUsername" name="username" required>
                </div>
                <div class="input-group">
                    <label for="adminPassword">Password</label>
                    <div class="password-container">
                        <input type="password" id="adminPassword" name="password" required>
                        <i class="fas fa-eye toggle-password" id="toggleAdminPassword"></i>
                    </div>
                </div>
                <div id="adminError" class="error-message" style="display: none;"></div>
                <button type="submit" class="btn-journal">Login</button>
            </form>
        </div>
    </div>

    <footer>
        <div class="container">
            <p>&copy; 2025 Neeraj Chauhan. All rights reserved.</p>
            <div class="social-links">
                <a href="https://www.linkedin.com/in/neeraj-chauhan-3ba593244" aria-label="LinkedIn Profile"><i class="fab fa-linkedin"></i></a>
                <a href="https://github.com/Nee-sudo" aria-label="GitHub Profile"><i class="fab fa-github"></i></a>
            </div>
        </div>
    </footer>

    <script src="https://cdn.quilljs.com/1.3.6/quill.min.js"></script>
<script>
    // Determine backend URL based on environment
    const isLocal = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';
    const backendUrl = isLocal ? 'http://localhost:4000' : 'https://neer-s-journal.onrender.com';

    // Read CSRF token from meta tag
    const csrfToken = document.querySelector('meta[name="csrf-token"]')?.content || '';

    // Define modal functions in global scope
    function openEditor() {
        document.getElementById('editorModal').classList.add('active');
    }

    function openFriendForm() {
        document.getElementById('friendModal').classList.add('active');
    }

    function openAdminLogin() {
        document.getElementById('adminLoginModal').classList.add('active');
    }

    function closeModal(modalId) {
        document.getElementById(modalId).classList.remove('active');
    }

    // Color Suggestions
    function setColor(color) {
        document.getElementById('boxColor').value = color;
    }

    // Slider Navigation
    function slide(sliderId, direction) {
        const slider = document.getElementById(sliderId).querySelector('.box-container');
        const boxes = slider.querySelectorAll('.box, .friend-card');
        const boxWidth = boxes[0].offsetWidth + 20; // Width + gap
        let currentTransform = parseInt(slider.style.transform.replace(/[^0-9-]/g, '') || 0);
        const maxTransform = -(boxes.length - 1) * boxWidth;
        currentTransform += direction * boxWidth;
        if (currentTransform > 0) currentTransform = 0;
        if (currentTransform < maxTransform) currentTransform = maxTransform;
        slider.style.transform = `translateX(${currentTransform}px)`;
    }

    // Function to append a new journal entry to the DOM
    function addJournalEntry(entry) {
        const slider = document.getElementById('journalSlider')?.querySelector('.box-container');
        if (!slider) {
            console.error('Journal slider or container not found');
            return;
        }
        try {
            const newBox = document.createElement('div');
            newBox.className = 'box';
            newBox.style.backgroundColor = entry.boxColor || '#ffffff';
            newBox.innerHTML = `
                <h3 style="color: ${entry.headingColor || '#333333'}">${entry.title}</h3>
                <div class="ql-editor" style="color: ${entry.contentColor || '#333333'}">${entry.content || ''}</div>
            `;
            slider.prepend(newBox);
            console.log('New journal entry added to DOM:', entry);
        } catch (error) {
            console.error('Error adding journal entry to DOM:', error);
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        // Navbar Menu Toggle
        const menuToggle = document.getElementById('menuToggle');
        const mainNav = document.getElementById('mainNav');
        const menuOverlay = document.getElementById('menuOverlay');

        function toggleMenu() {
            mainNav.classList.toggle('active');
            menuOverlay.classList.toggle('active');
            document.body.classList.toggle('menu-open');
        }

        menuToggle.addEventListener('click', toggleMenu);
        menuOverlay.addEventListener('click', toggleMenu);

        // Banner Slider
        const slides = document.querySelectorAll('.banner-slide');
        let currentSlide = 0;

        function showSlide(index) {
            slides.forEach((slide, i) => {
                slide.classList.toggle('active', i === index);
            });
        }

        function nextSlide() {
            currentSlide = (currentSlide + 1) % slides.length;
            showSlide(currentSlide);
        }

        setInterval(nextSlide, 5000);

        // Quill Editor
        const quill = new Quill('#editor', {
            theme: 'snow',
            modules: {
                toolbar: [
                    ['bold', 'italic', 'underline'],
                    [{ 'color': [] }, { 'background': [] }],
                    [{ 'align': [] }],
                    ['clean']
                ]
            }
        });

        // Handle Journal Form Submission
        const journalForm = document.getElementById('journalForm');
        journalForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            const content = quill.root.innerHTML;
            console.log('Quill Content:', content);
            document.getElementById('content').value = content;

            const formData = new FormData(journalForm);
            for (let [key, value] of formData.entries()) {
                console.log(`FormData: ${key} = ${value}`);
            }

            const formDataObj = {
                title: formData.get('title'),
                content: formData.get('content'),
                headingColor: formData.get('headingColor'),
                contentColor: formData.get('contentColor'),
                boxColor: formData.get('boxColor')
            };
            console.log('JSON Payload:', formDataObj);

            try {
                const response = await fetch(`${backendUrl}/api/saveJournal`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'CSRF-Token': csrfToken
                    },
                    body: JSON.stringify(formDataObj),
                    credentials: 'include'
                });

                const responseData = await response.json();
                if (response.ok) {
                    const newEntry = {
                        title: formData.get('title'),
                        content: formData.get('content'),
                        headingColor: formData.get('headingColor'),
                        contentColor: formData.get('contentColor'),
                        boxColor: formData.get('boxColor')
                    };
                    alert('Journal entry saved successfully!');
                    closeModal('editorModal');
                    addJournalEntry(newEntry);
                    quill.setContents([]); // Clear editor
                    try {
                        await new Promise(resolve => setTimeout(resolve, 100)); // Delay before reload
                        location.reload(); // Attempt to refresh
                    } catch (reloadError) {
                        console.warn('Page reload failed:', reloadError);
                        fetch(`${backendUrl}/home`, {
                            credentials: 'include'
                        })
                        .then(res => res.text())
                        .then(html => {
                            const parser = new DOMParser();
                            const doc = parser.parseFromString(html, 'text/html');
                            const newContent = doc.querySelector('#journalSlider')?.outerHTML || '';
                            document.getElementById('journalSlider').outerHTML = newContent;
                        })
                        .catch(err => console.error('Fallback update failed:', err));
                    }
                } else {
                    console.error('Server response:', responseData);
                    alert(`Failed to save journal entry: ${responseData.error || 'Unknown error'}`);
                }
            } catch (error) {
                console.error('Error saving journal:', error);
                alert(`An error occurred: ${error.message}. Entry not saved.`);
            }
        });

        // Handle Friend Form Submission
        const friendForm = document.getElementById('friendForm');
        friendForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            const formData = new FormData(friendForm);
            // Log form data for debugging
            console.log('Friend Form Data:');
            for (let [key, value] of formData.entries()) {
                console.log(`${key} = ${value}`);
            }

            // Client-side validation
            const name = formData.get('name');
            const joinDate = formData.get('joinDate');
            if (!name || !joinDate) {
                alert('Please fill in both name and join date.');
                return;
            }

            try {
                const response = await fetch(`${backendUrl}/neers-friends`, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'CSRF-Token': csrfToken
                    },
                    credentials: 'include'
                });
                const responseData = await response.json();
                if (response.ok) {
                    alert('Friend added successfully!');
                    closeModal('friendModal');
                    location.reload();
                } else {
                    console.error('Server response for friend:', responseData);
                    alert(`Failed to add friend: ${responseData.error || 'Unknown error'}`);
                }
            } catch (error) {
                console.error('Error adding friend:', error);
                alert('An error occurred while adding the friend.');
            }
        });

        // Handle Comment Form Submissions
        document.querySelectorAll('.comment-section form').forEach(form => {
            form.addEventListener('submit', async function(e) {
                e.preventDefault();
                const formData = new FormData(form);
                const actionUrl = form.getAttribute('action');
                try {
                    const response = await fetch(`${backendUrl}${actionUrl}`, {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'CSRF-Token': csrfToken
                        },
                        credentials: 'include'
                    });
                    if (response.ok) {
                        alert('Comment posted successfully!');
                        location.reload();
                    } else {
                        alert('Failed to post comment.');
                    }
                } catch (error) {
                    console.error('Error posting comment:', error);
                    alert('An error occurred while posting the comment.');
                }
            });
        });

        // Handle Admin Login Form Submission
        const adminLoginForm = document.getElementById('adminLoginForm');
        adminLoginForm.addEventListener('submit', function(e) {
            e.preventDefault();
            const username = document.getElementById('adminUsername').value;
            const password = document.getElementById('adminPassword').value;
            const errorDiv = document.getElementById('adminError');

            if (username === 'nilufarim' && password === 'neer_7007') {
                closeModal('adminLoginModal');
                openEditor();
                errorDiv.style.display = 'none';
            } else {
                errorDiv.textContent = 'Wrong credentials';
                errorDiv.style.display = 'block';
            }
        });

        // Modal Button Event Listeners
        const openEditorBtn = document.getElementById('openEditorBtn');
        const openFriendFormBtn = document.getElementById('openFriendFormBtn');
        const openAdminLoginBtn = document.getElementById('openAdminLoginBtn');
        const closeEditorBtn = document.getElementById('closeEditorBtn');
        const closeFriendFormBtn = document.getElementById('closeFriendFormBtn');
        const closeAdminLoginBtn = document.getElementById('closeAdminLoginBtn');

        if (openEditorBtn) {
            openEditorBtn.addEventListener('click', openEditor);
        }

        if (openFriendFormBtn) {
            openFriendFormBtn.addEventListener('click', openFriendForm);
        }

        if (openAdminLoginBtn) {
            openAdminLoginBtn.addEventListener('click', openAdminLogin);
        }

        if (closeEditorBtn) {
            closeEditorBtn.addEventListener('click', () => closeModal('editorModal'));
        }

        if (closeFriendFormBtn) {
            closeFriendFormBtn.addEventListener('click', () => closeModal('friendModal'));
        }

        if (closeAdminLoginBtn) {
            closeAdminLoginBtn.addEventListener('click', () => closeModal('adminLoginModal'));
        }

        // Close modals when clicking outside
        document.querySelectorAll('.modal').forEach(modal => {
            modal.addEventListener('click', function(e) {
                if (e.target === modal) {
                    modal.classList.remove('active');
                }
            });
        });

        // Theme Toggle
        const themeToggle = document.getElementById('themeToggle');
        const themeIcon = themeToggle.querySelector('i');

        function applyTheme(theme) {
            if (theme === 'dark') {
                document.body.classList.add('dark');
                themeIcon.className = 'fas fa-sun';
            } else {
                document.body.classList.remove('dark');
                themeIcon.className = 'fas fa-moon';
            }
            localStorage.setItem('theme', theme);
        }

        // Load saved theme or default to light
        const savedTheme = localStorage.getItem('theme') || 'light';
        applyTheme(savedTheme);

        themeToggle.addEventListener('click', function() {
            const currentTheme = document.body.classList.contains('dark') ? 'dark' : 'light';
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            applyTheme(newTheme);
        });

        // Toggle Password Visibility
        const toggleAdminPassword = document.getElementById('toggleAdminPassword');
        const adminPassword = document.getElementById('adminPassword');
        if (toggleAdminPassword && adminPassword) {
            toggleAdminPassword.addEventListener('click', function() {
                const type = adminPassword.getAttribute('type') === 'password' ? 'text' : 'password';
                adminPassword.setAttribute('type', type);
                this.classList.toggle('fa-eye');
                this.classList.toggle('fa-eye-slash');
            });
        }
    });
</script>
</body>
</html>

